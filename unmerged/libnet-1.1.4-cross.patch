diff --git a/configure.in b/configure.in
index 6a03192..d39565b 100644
--- a/configure.in
+++ b/configure.in
@@ -52,36 +52,50 @@ dnl fi
 dnl
 dnl Get link-layer interface type
 dnl
+AC_ARG_WITH(
+	[link-layer],
+	[AS_HELP_STRING([--with-link-layer],[select link layer to use @<:@autodetect@:>@])]
+)
+
+AC_CHECK_HEADERS([net/pfilt.h sys/net/nit.h net/raw.h sys/dlpi.h linux/socket.h])
 AC_MSG_CHECKING(link-layer packet interface type)
 
-if test -r /dev/bpf0 ; then
+if test -n "${with_link_layer}"; then
+    # AC_LIBOBJ does not get ${x}?
+    case "${with_layer}" in
+    	bpf) AC_LIBOBJ([libnet_link_bpf]) ;;
+	snit) AC_LIBOBJ([libnet_link_snit]) ;;
+	*) AC_MSG_ERROR([Invalid link type]) ;;
+    esac
+    AC_MSG_RESULT(forced ${with_layer})
+elif test "${cross_compiling}" != "yes" -a -r /dev/bpf0 ; then
     AC_LIBOBJ([libnet_link_bpf])
     AC_MSG_RESULT(found bpf)
-elif test -r /usr/include/net/pfilt.h ; then
+elif test "${ac_cv_header_net_pfilt_h}" = "yes" ; then
     AC_LIBOBJ([libnet_link_pf])
     AC_MSG_RESULT(found pf)
-elif test -r /dev/nit ; then
+elif test "${cross_compiling}" != "yes" -a test -r /dev/nit ; then
     AC_LIBOBJ([libnet_link_snit])
     AC_MSG_RESULT(found snit)
-elif test -r /usr/include/sys/net/nit.h ; then
+elif test "${ac_cv_header_sys_net_nit_h}" = "yes" ; then
     AC_LIBOBJ([libnet_link_nit])
     AC_MSG_RESULT(found nit)
-elif test -r /usr/include/net/raw.h ; then
+elif test "${ac_cv_header_net_raw_h}" = "yes" ; then
     AC_LIBOBJ([libnet_link_snoop])
     AC_MSG_RESULT(found snoop)
-elif test -r /usr/include/sys/dlpi.h ; then
+elif test "${ac_cv_include_sys_dlpi_h}" = "yes" ; then
     AC_LIBOBJ([libnet_link_dlpi])
     AC_MSG_RESULT(found dlpi)
     AC_DEFINE(HAVE_DLPI, 1, [Define if the <sys/dlpi.h> header exists.])
-elif test -r /usr/include/linux/socket.h ; then
+elif test "${ac_cv_linux_socket_h}" = "yes" ; then
     AC_LIBOBJ([libnet_link_linux])
     AC_MSG_RESULT(found linux primitives)
     AC_LIBNET_CHECK_PF_PACKET
     AC_LIBNET_LINUX_PROCFS
-elif test -c /dev/bpf0 ; then           # check again in case not readable
+elif test "${cross_compiling}" != "yes" -a -c /dev/bpf0 ; then           # check again in case not readable
     AC_LIBOBJ([libnet_link_bpf])
     AC_MSG_RESULT(found bpf)
-elif test -c /dev/nit ; then            # check again in case not readable
+elif test "${cross_compiling}" != "yes" -a -c /dev/nit ; then            # check again in case not readable
     AC_LIBOBJ([libnet_link_snit])
     AC_MSG_RESULT(found snit)
 elif test "$target_os" = "cygwin" ; then
